package monitor.projectConfig.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import monitor.projectConfig.bean.entity.T_Project;
import monitor.projectConfig.dao.IProjectConfigDao;
import monitor.user.bean.vo.PageInfoVo;

/**
 * @ClassName:ProjectConfigDaoImpl
 * @dateTime: 2017-10-14 下午3:06:55
 * @Description: TODO
 * @version 
 * @author: 黄月
 * @since JDK 1.7
 * History：
 * Editor     version      Time               Operation
 */
public class ProjectConfigDaoImpl implements IProjectConfigDao {
	
	
	private PreparedStatement ps = null;

	/**
	  * selectProjectPageInfo:接口实现
	  * @author 黄月
	  * @date  2017-10-14 下午3:21:34
	  * @param pageVo
	  * @return 
	 * @throws SQLException 
	*/
	@Override
	public List<T_Project> selectProjectPageInfo(PageInfoVo pageVo, Connection conn) throws SQLException {
		StringBuilder sql = new StringBuilder();
		sql.append(" SELECT * FROM ( SELECT ROWNUM RN,T.* FROM T_PROJECT T ) WHERE RN >= ? AND RN < ?");
		List<T_Project> list = new ArrayList<T_Project>();
		ResultSet rs = null;
		try {
			ps = conn.prepareStatement(sql.toString());
			ps.setInt(1, pageVo.getStartIndex());
			ps.setInt(2, pageVo.getEndIndex());
			rs = ps.executeQuery();
			
			T_Project pro = null;
			while (rs.next()) {
				pro = new T_Project();
				pro.setAzbg(rs.getDouble("AZBG"));
				pro.setAzbw(rs.getString("AZBW"));
				pro.setBh(rs.getString("BH"));
				pro.setDqsfld(rs.getDouble("DQSFLD"));
				pro.setDzjsd(rs.getDouble("DZJSD"));
				pro.setDzlx(rs.getString("DZLX"));
				pro.setFwxt(rs.getString("FWXT"));
				pro.setGcdz(rs.getString("GCDZ"));
				pro.setGcmc(rs.getString("GCMC"));
				pro.setGdcz(rs.getString("GDCZ"));
				pro.setGdgg(rs.getString("GDGG"));
				pro.setGdlx(rs.getString("GDLX"));
				pro.setJgljfs(rs.getString("JGLJFS"));
				pro.setJzgd(rs.getDouble("JZGD"));
				pro.setJzlb(rs.getString("JZLB"));
				pro.setKzzcsl(rs.getInt("KZZCSL"));
				pro.setSqu(rs.getString("SQU"));
				pro.setSzzt(rs.getString("SZZT"));
				pro.setXcjd(rs.getDouble("XCJD"));
				pro.setXh(rs.getString("XH"));
				pro.setYsfsjgg(rs.getString("YSFSJGG"));
				list.add(pro);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw new SQLException(e.getMessage());
		} finally {
			closed(rs, ps);
		}
		return list;
	}


	/**
	  * selectCountProject:查询项目总数
	  * @author 黄月
	  * @date  2017-10-14 下午4:11:27
	  * @return 
	 * @throws SQLException 
	*/
	@Override
	public Integer selectCountProject(Connection conn) throws SQLException {
		int sum = 0;
		ResultSet rs = null;
		try {
			ps = conn.prepareStatement(" SELECT COUNT(SQU) FROM T_PROJECT ");
			rs = ps.executeQuery();
			if (rs.next()) {
				sum = rs.getInt(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw new SQLException(e.getMessage());
		} finally {
			closed(rs, ps);
		}
		return sum;
	}
	
	/**
	  * selectProjectBySqu:查询单个项目
	  * @author 黄月
	  * @date  2017-10-14 下午3:27:19
	  * @param squ
	  * @return 
	*/
	@Override
	public T_Project selectProjectBySqu(String squ, Connection conn) {
		StringBuilder sql = new StringBuilder();
		sql.append(" SELECT * FROM T_PROJECT WHERE SQU = ? ");
		ResultSet rs = null;
		T_Project pro = null;
		try {
			ps = conn.prepareStatement(sql.toString());
			ps.setString(1, squ);
			rs = ps.executeQuery();
			if (rs.next()) {
				pro = new T_Project();
				pro.setAzbg(rs.getDouble("AZBG"));
				pro.setAzbw(rs.getString("AZBW"));
				pro.setBh(rs.getString("BH"));
				pro.setDqsfld(rs.getDouble("DQSFLD"));
				pro.setDzjsd(rs.getDouble("DZJSD"));
				pro.setDzlx(rs.getString("DZLX"));
				pro.setFwxt(rs.getString("FWXT"));
				pro.setGcdz(rs.getString("GCDZ"));
				pro.setGcmc(rs.getString("GCMC"));
				pro.setGdcz(rs.getString("GDCZ"));
				pro.setGdgg(rs.getString("GDGG"));
				pro.setGdlx(rs.getString("GDLX"));
				pro.setJgljfs(rs.getString("JGLJFS"));
				pro.setJzgd(rs.getDouble("JZGD"));
				pro.setJzlb(rs.getString("JZLB"));
				pro.setKzzcsl(rs.getInt("KZZCSL"));
				pro.setSqu(rs.getString("SQU"));
				pro.setSzzt(rs.getString("SZZT"));
				pro.setXcjd(rs.getDouble("XCJD"));
				pro.setXh(rs.getString("XH"));
				pro.setYsfsjgg(rs.getString("YSFSJGG"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closed(rs, ps);
		}
		return pro;
	}

	/**
	  * insertProject:接口实现
	  * @author 黄月
	  * @date  2017-10-14 下午3:27:19
	  * @param project 
	*/
	@Override
	public void insertProject(T_Project pro, Connection conn) {
		StringBuilder sql = new StringBuilder();
		sql.append(" INSERT INTO T_PROJECT( ");
		sql.append(" SQU,AZBG,AZBW,BH,DQSFLD,DZJSD,DZLX,FWXT,GCDZ,GCMC,GDCZ,GDGG,GDLX, ");
		sql.append(" JGLJFS,JZGD,JZLB,KZZCSL,SZZT,XCJD,XH,YSFSJGG) ");
		sql.append(" VALUES(SYS_GUID(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ");
		ResultSet rs = null;
		try {
			ps = conn.prepareStatement(sql.toString());
			ps.setDouble(1, pro.getAzbg());
			ps.setString(2, pro.getAzbw());
			ps.setString(3, pro.getBh());
			ps.setDouble(4, pro.getDqsfld());
			ps.setDouble(5, pro.getDzjsd());
			ps.setString(6, pro.getDzlx());
			ps.setString(7, pro.getFwxt());
			ps.setString(8, pro.getGcdz());
			ps.setString(9, pro.getGcmc());
			ps.setString(10, pro.getGdcz());
			ps.setString(11, pro.getGdgg());
			ps.setString(12, pro.getGdlx());
			ps.setString(13, pro.getJgljfs());
			ps.setDouble(14, pro.getJzgd());
			ps.setString(15, pro.getJzlb());
			ps.setInt(16, pro.getKzzcsl());
			ps.setString(17, pro.getSzzt());
			ps.setDouble(18, pro.getXcjd());
			ps.setString(19, pro.getXh());
			ps.setString(20, pro.getYsfsjgg());
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closed(rs, ps);
		}
	}

	/**
	  * updateProjectBySqu:接口实现
	  * @author 黄月
	  * @date  2017-10-14 下午3:27:19
	  * @param squ 
	*/
	@Override
	public void updateProjectBySqu(T_Project pro, Connection conn) {
		StringBuilder sql = new StringBuilder();
		sql.append(" UPDATE T_PROJECT SET AZBG=?,AZBW=?,BH=?,DQSFLD=?,DZJSD=?,DZLX=?, ");
		sql.append(" FWXT=?,GCDZ=?,GCMC=?,GDCZ=?,GDGG=?,GDLX=?,JGLJFS=?,JZGD=?, ");
		sql.append(" JZLB=?,KZZCSL=?,SZZT=?,XCJD=?,XH=?,YSFSJGG=? WHERE SQU=? ");
		try {
			ps = conn.prepareStatement(sql.toString());
			ps.setDouble(1, pro.getAzbg());
			ps.setString(2, pro.getAzbw());
			ps.setString(3, pro.getBh());
			ps.setDouble(4, pro.getDqsfld());
			ps.setDouble(5, pro.getDzjsd());
			ps.setString(6, pro.getDzlx());
			ps.setString(7, pro.getFwxt());
			ps.setString(8, pro.getGcdz());
			ps.setString(9, pro.getGcmc());
			ps.setString(10, pro.getGdcz());
			ps.setString(11, pro.getGdgg());
			ps.setString(12, pro.getGdlx());
			ps.setString(13, pro.getJgljfs());
			ps.setDouble(14, pro.getJzgd());
			ps.setString(15, pro.getJzlb());
			ps.setInt(16, pro.getKzzcsl());
			ps.setString(17, pro.getSzzt());
			ps.setDouble(18, pro.getXcjd());
			ps.setString(19, pro.getXh());
			ps.setString(20, pro.getYsfsjgg());
			ps.setString(21, pro.getSqu());
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closed(null, ps);
		}
	}

	/**
	  * deleteProjectBySqu:接口实现
	  * @author 黄月
	  * @date  2017-10-14 下午3:27:19
	  * @param squ 
	*/
	@Override
	public void deleteProjectBySqu(String squ, Connection conn) {
		StringBuilder sql = new StringBuilder();
		sql.append(" DELETE FROM T_PROJECT WHERE SQU=? ");
		try {
			ps = conn.prepareStatement(sql.toString());
			ps.setString(1, squ);
			ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			closed(null, ps);
		}
	}

	/**
	  * closed:(关闭数据库连接).<br/>
	  * TODO(这里描述方法适用条件/执行流程/使用方法/注意事项).<br/>
	  * @author: 黄月
	  * @dateTime: 2017-10-14 下午3:29:43
	  * @param rs
	  * @param ps
	  * @param conn void
	  * @since JDK 1.7
	*/
	private void closed(ResultSet rs, PreparedStatement ps){
		if (rs != null) {
			try {
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		if (ps != null) {
			try {
				ps.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}

}
