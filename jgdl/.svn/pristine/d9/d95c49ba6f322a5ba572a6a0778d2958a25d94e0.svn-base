package monitor.dispatched.service.impl;

import java.util.List;
import java.util.Vector;

import monitor.dispatched.bean.entity.AddApplicationEntity;
import monitor.dispatched.bean.entity.SSPTuserinfo;
import monitor.dispatched.dao.AppApplicationDao;
import monitor.dispatched.service.AppApplicationService;
import monitor.user.bean.dto.UserDto;

public class AppApplicationServiceImpl implements AppApplicationService{
    private AppApplicationDao appApplicationDao;

    public AppApplicationDao getAppApplicationDao(){
        return appApplicationDao;
    }

    public void setAppApplicationDao(AppApplicationDao appApplicationDao){
        this.appApplicationDao = appApplicationDao;
    }

    
    
    public List<SSPTuserinfo> listAdminRole(){
        return this.appApplicationDao.listAdminRole();
    }

    public String checkIsBkedBy(String id,UserDto _user){
    	return this.appApplicationDao.checkIsBkedBy(id,_user);
    }
    
    
    /**
     * findByIDCardVector:(通过身份证集合查询在逃和重点人员的显示信息).<br/>
     * @author: 张家俊
     * @dateTime: 2017-5-3 下午5:22:23
     * @param: @param v
     * @param: @return
     * @return: Vector<AddApplicationEntity>
     * @since JDK 1.6
    */
    public Vector<AddApplicationEntity> findIDCardVector(Vector<String> v,String rylx){
       return this.appApplicationDao.findByIDCardVector(v,rylx);
    }
    
    /**
     * 
      * insertRecordToBKRY:(获取主键值，用户主键值，审批人主键信息添加新的人员布控记录).<br/>
      * @author: 张家俊
      * @dateTime: 2017-5-3 下午5:22:23
      * @param: @param v
      * @param: @return
      * @return: Vector<AddApplicationEntity>
      * @throws
      * @since JDK 1.6
     */
    public void insertRecordToBKRY(Vector<String> v,UserDto _user,String sprsqu){
         this.appApplicationDao.insertRecordToBKRY(v, _user, sprsqu);
    }
    
    
    public AddApplicationEntity singleFind(String idcard){
        return this.appApplicationDao.singleFind(idcard);
    }
    
    public int addTransitionData(AddApplicationEntity entity,String rylx,UserDto user){
        return this.appApplicationDao.addTransitionData(entity, rylx,user);
    }
    
    public Vector<AddApplicationEntity> findByIDCardVectors(List<String> v,UserDto user){
        return this.appApplicationDao.findByIDCardVectors(v,user);
    }
    
    public int deleteTransitionData(UserDto user){
        return this.appApplicationDao.deleteTransitionData(user);
    }
    
    public int deleteRecordById(String id,String rylx){
        return this.appApplicationDao.deleteRecordById(id,rylx);
    }
    
    public String checkExistInPage(String id,UserDto user){
    	return this.appApplicationDao.checkExistInPage(id, user);
    }
    
    public Vector<AddApplicationEntity> reloadDataBySqu(UserDto user){
    	return this.appApplicationDao.reloadDataBySqu(user);
    }
}
